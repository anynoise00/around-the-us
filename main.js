!function(){"use strict";var e={d:function(t,r){for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function r(e,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}e.d({},{Sg:function(){return Z},lx:function(){return te},Ar:function(){return ce},ae:function(){return ie},eY:function(){return ee}});var n=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=document.querySelector(r)}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"clearWarnings",value:function(){var e=this,t=Array.from(this._form.querySelectorAll(this._inputSelector)),r=this._form.querySelector(this._submitButtonSelector);this._toggleButtonState(t,r),t.forEach((function(t){e._hideInputError(t)}))}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._form.querySelectorAll(this._inputSelector)),r=this._form.querySelector(this._submitButtonSelector);this._toggleButtonState(t,r),t.forEach((function(n){n.addEventListener("input",(function(){e._checkInputValidity(n),e._toggleButtonState(t,r)}))}))}},{key:"_checkInputValidity",value:function(e){this._setCustomErrorMessage(e),e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?t.classList.add(this._inactiveButtonClass):t.classList.remove(this._inactiveButtonClass)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_showInputError",value:function(e,t){var r=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),r.textContent=t,r.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_setCustomErrorMessage",value:function(e){var t=e.validity;t.valueMissing?e.setCustomValidity("Preencha este campo."):t.tooShort?e.setCustomValidity("Por favor, insira pelo menos 2 caracteres."):t.typeMismatch?e.setCustomValidity("Por favor, insira um endereÃ§o web."):e.setCustomValidity("")}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==o(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==o(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===o(i)?i:String(i)),n)}var i}var a=function(){function e(t,r){var n=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=n,this._renderer=o,this._container=document.querySelector(r)}var t,r;return t=e,(r=[{key:"renderItems",value:function(){var e=this;this.clear(),this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e,t){t?this._container.prepend(e):this._container.append(e)}},{key:"clear",value:function(){this._container.innerHTML=""}}])&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),u={inputSelector:".form__field",submitButtonSelector:".form__button-submit",inactiveButtonClass:"form__button-submit_inactive",inputErrorClass:"form__field_type_error",errorClass:"form__input-error_active"},l=".form__field",c="popup_visible",s=".card__button-like",f=".card__button-delete",y="card__button-like_active",p=document.querySelector(".image-popup__image"),m=document.querySelector(".image-popup__title"),d=document.querySelector(".profile"),v=d.querySelector(".profile__button-edit"),h=d.querySelector(".profile__button-add"),b=d.querySelector(".profile__avatar-overlay");function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function S(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==_(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==_(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===_(o)?o:String(o)),n)}var o}var g=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._isOpen=!1,this._element=document.querySelector(t),this._handleEscClose=function(e){"Escape"===e.key&&r._isOpen&&r.close()}}var t,r;return t=e,(r=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._isOpen=!0,this._element.classList.add(c)}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._isOpen=!1,this._element.classList.remove(c)}},{key:"setEventListeners",value:function(){var e=this;this._element.querySelector(".popup__button-close").addEventListener("click",(function(){e.close()})),this._element.querySelector(".popup__overlay").addEventListener("click",(function(){e.close()}))}}])&&S(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function w(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==k(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==k(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===k(o)?o:String(o)),n)}var o}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},E.apply(this,arguments)}function O(e,t){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},O(e,t)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&O(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(n);if(o){var r=C(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(r=[{key:"open",value:function(e){var t=e.name,r=e.link,n=e.alt,o=void 0===n?"Uma imagem ampliada da paisagem.":n;m.textContent=t,p.src=r,p.alt=o,E(C(a.prototype),"open",this).call(this)}}])&&w(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(g);function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function L(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function T(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==P(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==P(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===P(o)?o:String(o)),n)}var o}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},q.apply(this,arguments)}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(n);if(o){var r=x(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e,t){var r,n=e.handleFormSubmit,o=e.submitDefaultText,u=void 0===o?"Enviar":o,l=e.submitSendText,c=void 0===l?"Enviando...":l,s=e.onOpen,f=void 0===s?function(){}:s,y=e.onClose,p=void 0===y?function(){}:y;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,t))._handleFormSubmit=n,r._onOpen=f,r._onClose=p,r._form=r._element.querySelector(".form"),r._submitBtn=r._form.querySelector(".form__button-submit"),r._submitDefaultText=u,r._submitSendText=c,r}return t=a,(r=[{key:"setEventListeners",value:function(){var e=this;q(x(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){var r=e._getInputValues();e._submitBtn.textContent=e._submitSendText,e._handleFormSubmit(t,r)}))}},{key:"setFormValues",value:function(e){var t=this;Object.entries(e).forEach((function(e){var r,n,o=(n=2,function(e){if(Array.isArray(e))return e}(r=e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],l=!0,c=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return u}}(r,n)||function(e,t){if(e){if("string"==typeof e)return L(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?L(e,t):void 0}}(r,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],a=o[1];t._form.querySelector(l+'[name="'.concat(i,'"]')).value=a}))}},{key:"open",value:function(){this._onOpen(),q(x(a.prototype),"open",this).call(this)}},{key:"close",value:function(){q(x(a.prototype),"close",this).call(this),this._submitBtn.textContent=this._submitDefaultText,this._form.reset(),this._onClose()}},{key:"_getInputValues",value:function(){var e={};return this._form.querySelectorAll(l).forEach((function(t){e[t.name]=t.value})),e}}])&&T(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(g);function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function R(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==B(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==B(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===B(o)?o:String(o)),n)}var o}var D=function(){function e(t){var r=t.nameSelector,n=t.aboutSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(r),this._aboutElement=document.querySelector(n),this._avatarElement=document.querySelector(o),this._userId=""}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,about:this._aboutElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,r=e.about;this._nameElement.textContent=t,this._aboutElement.textContent=r}},{key:"getUserId",value:function(){return this._userId}},{key:"setUserId",value:function(e){this._userId=e}},{key:"setUserAvatar",value:function(e){var t=e.avatar;this._avatarElement.src=t}}])&&R(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function V(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==A(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==A(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===A(o)?o:String(o)),n)}var o}var F=function(){function e(t,r){var n=t.data,o=t.handleCardClick,i=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._id=n._id,this._name=n.name,this._link=n.link,this._alt=n.alt,this._templateSelector=r,this._userLiked=n.likes.some((function(e){return e._id==i})),this._likeCount=n.likes.length,this._isOwner=n.owner._id==i,this._handleCardClick=o}var t,r;return t=e,(r=[{key:"generateCard",value:function(){var e;this._element=this._getTemplate(),this._setEventListeners(),this._isOwner||this._element.querySelector(f).classList.add("card__button-delete_hidden"),this._element.querySelector(".card__title").textContent=this._name;var t=this._element.querySelector(".card__image");return t.src=this._link,t.alt=null!==(e=this._alt)&&void 0!==e?e:"Uma imagem da paisagem do ".concat(this._name),this._likeBtnElement=this._element.querySelector(s),this._userLiked&&this._likeBtnElement.classList.add(y),this._renderLikes(),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(s).addEventListener("click",(function(){e._toggleLikeButton()})),this._isOwner&&this._element.querySelector(f).addEventListener("click",(function(){ce.setConfirmAction((function(){Z.deleteCard(e._id).catch(W),e._deleteCard(),ce.close()})),ce.open()})),this._element.querySelector(".card__button-view-image").addEventListener("click",(function(){e._handleCardClick({name:e._name,link:e._link,alt:e._alt})}))}},{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"_deleteCard",value:function(){this._element.remove()}},{key:"_toggleLikeButton",value:function(){var e=this;this._userLiked=!this._userLiked,(this._userLiked?this._like():this._dislike()).then((function(t){e._likeCount=t.likes.length,e._renderLikes()})).catch(W)}},{key:"_like",value:function(){return this._likeBtnElement.classList.add(y),Z.likeCard(this._id)}},{key:"_dislike",value:function(){return this._likeBtnElement.classList.remove(y),Z.dislikeCard(this._id)}},{key:"_renderLikes",value:function(){this._element.querySelector(".card__like-counter").textContent=this._likeCount}}])&&V(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function M(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=new F({data:e,handleCardClick:function(e){ie.open(e)},userId:ee.getUserId()},"#card-template").generateCard();te.addItem(r,t)}function N(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}function W(e){alert("Algo deu errado. ".concat(e,"."))}function H(e){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H(e)}function J(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==H(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==H(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===H(o)?o:String(o)),n)}var o}var z=function(){function e(t){var r=t.baseUrl,n=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=r,this._headers=n}var t,r;return t=e,(r=[{key:"getUserData",value:function(){return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then(N)}},{key:"updateUserData",value:function(e){var t=e.name,r=e.about;return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then(N)}},{key:"updateAvatar",value:function(e){var t=e.avatar;return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(N)}},{key:"getInitialCards",value:function(){return fetch(this._baseUrl+"/cards",{headers:this._headers}).then(N)}},{key:"addCard",value:function(e){var t=e.name,r=e.link;return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then(N)}},{key:"deleteCard",value:function(e){return fetch(this._baseUrl+"/cards/"+e,{method:"DELETE",headers:this._headers}).then(N)}},{key:"likeCard",value:function(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this._headers}).then(N)}},{key:"dislikeCard",value:function(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this._headers}).then(N)}}])&&J(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function Y(e){return Y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Y(e)}function $(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==Y(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==Y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===Y(o)?o:String(o)),n)}var o}function G(){return G="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=Q(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},G.apply(this,arguments)}function K(e,t){return K=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},K(e,t)}function Q(e){return Q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Q(e)}var X=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&K(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Q(n);if(o){var r=Q(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===Y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(r=[{key:"setEventListeners",value:function(){var e=this;G(Q(a.prototype),"setEventListeners",this).call(this),this._element.querySelector(".popup__button-confirm").addEventListener("click",(function(t){t.preventDefault(),e._handleConfirm()}))}},{key:"setConfirmAction",value:function(e){this._handleConfirm=e}}])&&$(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(g),Z=new z({baseUrl:"https://around.nomoreparties.co/v1/".concat("web_ptbr_04"),headers:{authorization:"56988fc2-c072-4a64-b0a6-6eaae5ae8b3e","Content-Type":"application/json"}}),ee=new D({nameSelector:".profile__name",aboutSelector:".profile__description",avatarSelector:".profile__avatar"}),te=new a({items:[],renderer:function(){}},".cards");Z.getUserData().then((function(e){console.log(e),ee.setUserInfo(e),ee.setUserAvatar(e),ee.setUserId(e._id)})).catch(W),Z.getInitialCards().then((function(e){e.forEach((function(e){M(e)}))})).catch(W).value;var re=new U({handleFormSubmit:function(e,t){e.preventDefault(),Z.updateUserData({name:t.name,about:t.about}).then((function(e){ee.setUserInfo(e),re.close()})).catch(W)},submitDefaultText:"Salvar",submitSendText:"Salvando...",onOpen:function(){return re.setFormValues(ee.getUserInfo())},onClose:function(){return ae.clearWarnings()}},"#popup-edit-profile"),ne=new U({handleFormSubmit:function(e,t){e.preventDefault(),Z.addCard({name:t.title,link:t.link}).then((function(e){M(e,!0),ne.close()})).catch(W)},submitDefaultText:"Criar",submitSendText:"Criando...",onClose:function(){return ue.clearWarnings()}},"#popup-add-image"),oe=new U({handleFormSubmit:function(e,t){e.preventDefault(),Z.updateAvatar({avatar:t.avatar}).then((function(){ee.setUserAvatar({avatar:t.avatar}),oe.close()})).catch((function(e){oe.close(),W(e)}))},submitDefaultText:"Salvar",submitSendText:"Salvando...",onClose:function(){return le.clearWarnings()}},"#popup-edit-avatar"),ie=new j("#popup-image-view"),ae=new n(u,".form_type_edit-profile"),ue=new n(u,".form_type_add-image"),le=new n(u,".form_type_edit-avatar"),ce=new X("#popup-confirmation");h.addEventListener("click",(function(){return ne.open()})),v.addEventListener("click",(function(){return re.open()})),b.addEventListener("click",(function(){return oe.open()})),ne.setEventListeners(),re.setEventListeners(),oe.setEventListeners(),ie.setEventListeners(),ce.setEventListeners(),ae.enableValidation(),ue.enableValidation(),le.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,