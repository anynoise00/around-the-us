!function(){"use strict";var e={d:function(t,r){for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function r(e,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}e.d({},{Sg:function(){return Z},lx:function(){return te},Ar:function(){return ce},ae:function(){return ie},eY:function(){return ee}});var n=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=document.querySelector(r)}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"clearWarnings",value:function(){var e=this,t=Array.from(this._form.querySelectorAll(this._inputSelector)),r=this._form.querySelector(this._submitButtonSelector);this._toggleButtonState(t,r),t.forEach((function(t){e._hideInputError(t)}))}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._form.querySelectorAll(this._inputSelector)),r=this._form.querySelector(this._submitButtonSelector);this._toggleButtonState(t,r),t.forEach((function(n){n.addEventListener("input",(function(){e._checkInputValidity(n),e._toggleButtonState(t,r)}))}))}},{key:"_checkInputValidity",value:function(e){this._setCustomErrorMessage(e),e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?t.classList.add(this._inactiveButtonClass):t.classList.remove(this._inactiveButtonClass)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_showInputError",value:function(e,t){var r=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),r.textContent=t,r.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_setCustomErrorMessage",value:function(e){var t=e.validity;t.valueMissing?e.setCustomValidity("Preencha este campo."):t.tooShort?e.setCustomValidity("Por favor, insira pelo menos 2 caracteres."):t.typeMismatch?e.setCustomValidity("Por favor, insira um endereÃ§o web."):e.setCustomValidity("")}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==o(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==o(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===o(i)?i:String(i)),n)}var i}var a=function(){function e(t,r){var n=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=n,this._renderer=o,this._container=document.querySelector(r)}var t,r;return t=e,(r=[{key:"renderItems",value:function(){var e=this;this.clear(),this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e,t){t?this._container.prepend(e):this._container.append(e)}},{key:"clear",value:function(){this._container.innerHTML=""}}])&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),u={inputSelector:".form__field",submitButtonSelector:".form__button-submit",inactiveButtonClass:"form__button-submit_inactive",inputErrorClass:"form__field_type_error",errorClass:"form__input-error_active"},l=".form__field",c="popup_visible",s=".card__button-like",f=".card__button-delete",y="card__button-like_active",p=document.querySelector(".image-popup__image"),m=document.querySelector(".image-popup__title"),d=document.querySelector(".profile"),v=d.querySelector(".profile__button-edit"),h=d.querySelector(".profile__button-add"),b=d.querySelector(".profile__avatar-overlay");function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function S(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==_(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==_(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===_(o)?o:String(o)),n)}var o}var g=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._isOpen=!1,this._element=document.querySelector(t),this._handleEscClose=function(e){"Escape"===e.key&&r._isOpen&&r.close()}}var t,r;return t=e,(r=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._isOpen=!0,this._element.classList.add(c)}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._isOpen=!1,this._element.classList.remove(c)}},{key:"setEventListeners",value:function(){var e=this;this._element.querySelector(".popup__button-close").addEventListener("click",(function(){e.close()})),this._element.querySelector(".popup__overlay").addEventListener("click",(function(){e.close()}))}}])&&S(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function w(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==k(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==k(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===k(o)?o:String(o)),n)}var o}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},E.apply(this,arguments)}function O(e,t){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},O(e,t)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&O(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(n);if(o){var r=C(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(r=[{key:"open",value:function(e){var t=e.name,r=e.link,n=e.alt,o=void 0===n?"Uma imagem ampliada da paisagem.":n;m.textContent=t,p.src=r,p.alt=o,E(C(a.prototype),"open",this).call(this)}}])&&w(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(g);function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function L(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function T(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==P(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==P(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===P(o)?o:String(o)),n)}var o}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},q.apply(this,arguments)}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(n);if(o){var r=x(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e,t){var r,n=e.handleFormSubmit,o=e.submitDefaultText,u=void 0===o?"Enviar":o,l=e.submitSendText,c=void 0===l?"Enviando...":l,s=e.onOpen,f=void 0===s?function(){}:s,y=e.onClose,p=void 0===y?function(){}:y;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,t))._handleFormSubmit=n,r._onOpen=f,r._onClose=p,r._form=r._element.querySelector(".form"),r._submitBtn=r._form.querySelector(".form__button-submit"),r._submitDefaultText=u,r._submitSendText=c,r}return t=a,(r=[{key:"setEventListeners",value:function(){var e=this;q(x(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){var r=e._getInputValues();e._submitBtn.textContent=e._submitSendText,e._handleFormSubmit(t,r)}))}},{key:"setFormValues",value:function(e){var t=this;Object.entries(e).forEach((function(e){var r,n,o=(n=2,function(e){if(Array.isArray(e))return e}(r=e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],l=!0,c=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return u}}(r,n)||function(e,t){if(e){if("string"==typeof e)return L(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?L(e,t):void 0}}(r,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],a=o[1];t._form.querySelector(l+'[name="'.concat(i,'"]')).value=a}))}},{key:"open",value:function(){this._onOpen(),q(x(a.prototype),"open",this).call(this)}},{key:"close",value:function(){q(x(a.prototype),"close",this).call(this),this._submitBtn.textContent=this._submitDefaultText,this._form.reset(),this._onClose()}},{key:"_getInputValues",value:function(){var e={};return this._form.querySelectorAll(l).forEach((function(t){e[t.name]=t.value})),e}}])&&T(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(g);function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function R(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==B(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==B(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===B(o)?o:String(o)),n)}var o}var D=function(){function e(t){var r=t.nameSelector,n=t.aboutSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(r),this._aboutElement=document.querySelector(n),this._avatarElement=document.querySelector(o),this._userId=""}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,about:this._aboutElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,r=e.about;this._nameElement.textContent=t,this._aboutElement.textContent=r}},{key:"getUserId",value:function(){return this._userId}},{key:"setUserId",value:function(e){this._userId=e}},{key:"setUserAvatar",value:function(e){var t=e.avatar;console.log(t),this._avatarElement.src=t}}])&&R(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function V(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==A(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==A(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===A(o)?o:String(o)),n)}var o}var F=function(){function e(t,r){var n=t.data,o=t.handleCardClick,i=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._id=n._id,this._name=n.name,this._link=n.link,this._alt=n.alt,this._templateSelector=r,this._userLiked=n.likes.some((function(e){return e._id==i})),this._likeCount=n.likes.length,this._isOwner=n.owner._id==i,this._handleCardClick=o}var t,r;return t=e,(r=[{key:"generateCard",value:function(){var e;this._element=this._getTemplate(),this._setEventListeners(),this._isOwner||this._element.querySelector(f).classList.add("card__button-delete_hidden"),this._element.querySelector(".card__title").textContent=this._name;var t=this._element.querySelector(".card__image");return t.src=this._link,t.alt=null!==(e=this._alt)&&void 0!==e?e:"Uma imagem da paisagem do ".concat(this._name),this._likeBtnElement=this._element.querySelector(s),this._userLiked&&this._likeBtnElement.classList.add(y),this._renderLikes(),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(s).addEventListener("click",(function(){e._toggleLikeButton()})),this._isOwner&&this._element.querySelector(f).addEventListener("click",(function(){ce.setConfirmAction((function(){Z.deleteCard(e._id).catch(W),e._deleteCard(),ce.close()})),ce.open()})),this._element.querySelector(".card__button-view-image").addEventListener("click",(function(){e._handleCardClick({name:e._name,link:e._link,alt:e._alt})}))}},{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"_deleteCard",value:function(){this._element.remove()}},{key:"_toggleLikeButton",value:function(){var e=this;this._userLiked=!this._userLiked,(this._userLiked?this._like():this._dislike()).then((function(t){e._likeCount=t.likes.length,e._renderLikes()})).catch(W)}},{key:"_like",value:function(){return this._likeBtnElement.classList.add(y),Z.likeCard(this._id)}},{key:"_dislike",value:function(){return this._likeBtnElement.classList.remove(y),Z.dislikeCard(this._id)}},{key:"_renderLikes",value:function(){this._element.querySelector(".card__like-counter").textContent=this._likeCount}}])&&V(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function M(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=new F({data:e,handleCardClick:function(e){ie.open(e)},userId:ee.getUserId()},"#card-template").generateCard();te.addItem(r,t)}function N(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}function W(e){alert("Algo deu errado. ".concat(e,"."))}function H(e){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H(e)}function J(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==H(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==H(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===H(o)?o:String(o)),n)}var o}var z=function(){function e(t){var r=t.baseUrl,n=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=r,this._headers=n}var t,r;return t=e,(r=[{key:"getUserData",value:function(){return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then(N)}},{key:"updateUserData",value:function(e){var t=e.name,r=e.about;return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then(N)}},{key:"updateAvatar",value:function(e){var t=e.avatar;return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(N)}},{key:"getInitialCards",value:function(){return fetch(this._baseUrl+"/cards",{headers:this._headers}).then(N)}},{key:"addCard",value:function(e){var t=e.name,r=e.link;return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then(N)}},{key:"deleteCard",value:function(e){return fetch(this._baseUrl+"/cards/"+e,{method:"DELETE",headers:this._headers}).then(N)}},{key:"likeCard",value:function(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this._headers}).then(N)}},{key:"dislikeCard",value:function(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this._headers}).then(N)}}])&&J(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function Y(e){return Y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Y(e)}function $(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==Y(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==Y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===Y(o)?o:String(o)),n)}var o}function G(){return G="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=Q(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},G.apply(this,arguments)}function K(e,t){return K=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},K(e,t)}function Q(e){return Q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Q(e)}var X=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&K(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Q(n);if(o){var r=Q(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===Y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(r=[{key:"setEventListeners",value:function(){var e=this;G(Q(a.prototype),"setEventListeners",this).call(this),this._element.querySelector(".popup__button-confirm").addEventListener("click",(function(t){t.preventDefault(),e._handleConfirm()}))}},{key:"setConfirmAction",value:function(e){this._handleConfirm=e}}])&&$(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(g),Z=new z({baseUrl:"https://around.nomoreparties.co/v1/".concat("web_ptbr_04"),headers:{authorization:"56988fc2-c072-4a64-b0a6-6eaae5ae8b3e","Content-Type":"application/json"}}),ee=new D({nameSelector:".profile__name",aboutSelector:".profile__description",avatarSelector:".profile__avatar"}),te=new a({items:[],renderer:function(){}},".cards");Z.getUserData().then((function(e){ee.setUserInfo(e),ee.setUserAvatar(e),ee.setUserId(e._id)})).catch(W),Z.getInitialCards().then((function(e){e.forEach((function(e){M(e)}))})).catch(W).value;var re=new U({handleFormSubmit:function(e,t){e.preventDefault(),Z.updateUserData({name:t.name,about:t.about}).then((function(e){ee.setUserInfo(e),re.close()})).catch(W)},submitDefaultText:"Salvar",submitSendText:"Salvando...",onOpen:function(){return re.setFormValues(ee.getUserInfo())},onClose:function(){return ae.clearWarnings()}},"#popup-edit-profile"),ne=new U({handleFormSubmit:function(e,t){e.preventDefault(),Z.addCard({name:t.title,link:t.link}).then((function(e){M(e,!0),ne.close()})).catch(W)},submitDefaultText:"Criar",submitSendText:"Criando...",onClose:function(){return ue.clearWarnings()}},"#popup-add-image"),oe=new U({handleFormSubmit:function(e,t){e.preventDefault(),Z.updateAvatar({avatar:t.link}).then((function(e){console.log(e),ee.setUserAvatar({avatar:t.link}),oe.close()})).catch((function(e){oe.close(),W(e)}))},submitDefaultText:"Salvar",submitSendText:"Salvando...",onClose:function(){return le.clearWarnings()}},"#popup-edit-avatar"),ie=new j("#popup-image-view"),ae=new n(u,".form_type_edit-profile"),ue=new n(u,".form_type_add-image"),le=new n(u,".form_type_edit-avatar"),ce=new X("#popup-confirmation");h.addEventListener("click",(function(){return ne.open()})),v.addEventListener("click",(function(){return re.open()})),b.addEventListener("click",(function(){return oe.open()})),ne.setEventListeners(),re.setEventListeners(),oe.setEventListeners(),ie.setEventListeners(),ce.setEventListeners(),ae.enableValidation(),ue.enableValidation(),le.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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azovL2V1YS1hZm9yYS93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vZXVhLWFmb3JhL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vZXVhLWFmb3JhLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL2V1YS1hZm9yYS8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9ldWEtYWZvcmEvLi9zcmMvc2NyaXB0cy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vZXVhLWFmb3JhLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9ldWEtYWZvcmEvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL2V1YS1hZm9yYS8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9ldWEtYWZvcmEvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL2V1YS1hZm9yYS8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9ldWEtYWZvcmEvLi9zcmMvc2NyaXB0cy91dGlscy91dGlscy5qcyIsIndlYnBhY2s6Ly9ldWEtYWZvcmEvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9ldWEtYWZvcmEvLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0NvbmZpcm1hdGlvblBvcHVwLmpzIiwid2VicGFjazovL2V1YS1hZm9yYS8uL3NyYy9zY3JpcHRzL3BhZ2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSByZXF1aXJlIHNjb3BlXG52YXIgX193ZWJwYWNrX3JlcXVpcmVfXyA9IHt9O1xuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBkZWZpbml0aW9uKSB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iaiwgcHJvcCkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7IH0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3Rvcihjb25maWcsIGZvcm1TZWxlY3Rvcikge1xyXG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGNvbmZpZy5pbnB1dFNlbGVjdG9yO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBjb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBjb25maWcuaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IGNvbmZpZy5lcnJvckNsYXNzO1xyXG5cclxuICAgIHRoaXMuX2Zvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGZvcm1TZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldikgPT4ge1xyXG4gICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcblxyXG4gIGNsZWFyV2FybmluZ3MoKSB7XHJcbiAgICBjb25zdCBpbnB1dExpc3QgPSBBcnJheS5mcm9tKFxyXG4gICAgICB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcilcclxuICAgICk7XHJcblxyXG4gICAgY29uc3QgYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQpO1xyXG5cclxuICAgIGlucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIGNvbnN0IGlucHV0TGlzdCA9IEFycmF5LmZyb20oXHJcbiAgICAgIHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKVxyXG4gICAgKTtcclxuICAgIGNvbnN0IGJ1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50KTtcclxuXHJcbiAgICBpbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXQpO1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0KSB7XHJcbiAgICB0aGlzLl9zZXRDdXN0b21FcnJvck1lc3NhZ2UoaW5wdXQpO1xyXG4gICAgaWYgKCFpbnB1dC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dCwgaW5wdXQudmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCkge1xyXG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpKSB7XHJcbiAgICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSB7XHJcbiAgICByZXR1cm4gaW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCk7XHJcbiAgfVxyXG5cclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXQsIGVycm9yTWVzc2FnZSkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0KSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0LmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gIH1cclxuXHJcbiAgX3NldEN1c3RvbUVycm9yTWVzc2FnZShpbnB1dCkge1xyXG4gICAgY29uc3QgdmFsaWRpdHlTdGF0ZSA9IGlucHV0LnZhbGlkaXR5O1xyXG5cclxuICAgIGlmICh2YWxpZGl0eVN0YXRlLnZhbHVlTWlzc2luZykge1xyXG4gICAgICBpbnB1dC5zZXRDdXN0b21WYWxpZGl0eShcIlByZWVuY2hhIGVzdGUgY2FtcG8uXCIpO1xyXG4gICAgfSBlbHNlIGlmICh2YWxpZGl0eVN0YXRlLnRvb1Nob3J0KSB7XHJcbiAgICAgIGlucHV0LnNldEN1c3RvbVZhbGlkaXR5KFwiUG9yIGZhdm9yLCBpbnNpcmEgcGVsbyBtZW5vcyAyIGNhcmFjdGVyZXMuXCIpO1xyXG4gICAgfSBlbHNlIGlmICh2YWxpZGl0eVN0YXRlLnR5cGVNaXNtYXRjaCkge1xyXG4gICAgICBpbnB1dC5zZXRDdXN0b21WYWxpZGl0eShcIlBvciBmYXZvciwgaW5zaXJhIHVtIGVuZGVyZcOnbyB3ZWIuXCIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaW5wdXQuc2V0Q3VzdG9tVmFsaWRpdHkoXCJcIik7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xyXG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICB0aGlzLmNsZWFyKCk7XHJcbiAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtKGl0ZW0sIHRvU3RhcnQpIHtcclxuICAgIHRvU3RhcnQgPyB0aGlzLl9jb250YWluZXIucHJlcGVuZChpdGVtKSA6IHRoaXMuX2NvbnRhaW5lci5hcHBlbmQoaXRlbSk7XHJcbiAgfVxyXG5cclxuICBjbGVhcigpIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5pbm5lckhUTUwgPSBcIlwiO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgY29uc3QgZm9ybUNvbmZpZyA9IHtcclxuICBpbnB1dFNlbGVjdG9yOiBcIi5mb3JtX19maWVsZFwiLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5mb3JtX19idXR0b24tc3VibWl0XCIsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJmb3JtX19idXR0b24tc3VibWl0X2luYWN0aXZlXCIsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBcImZvcm1fX2ZpZWxkX3R5cGVfZXJyb3JcIixcclxuICBlcnJvckNsYXNzOiBcImZvcm1fX2lucHV0LWVycm9yX2FjdGl2ZVwiLFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGdyb3VwSWQgPSBcIndlYl9wdGJyXzA0XCI7XHJcbmV4cG9ydCBjb25zdCB0b2tlbiA9IFwiNTY5ODhmYzItYzA3Mi00YTY0LWIwYTYtNmVhYWU1YWU4YjNlXCI7XHJcblxyXG5leHBvcnQgY29uc3QgZm9ybVNlbGVjdG9yID0gXCIuZm9ybVwiO1xyXG5leHBvcnQgY29uc3QgZm9ybUZpZWxkU2VsZWN0b3IgPSBcIi5mb3JtX19maWVsZFwiO1xyXG5leHBvcnQgY29uc3QgZm9ybVN1Ym1pdFNlbGVjdG9yID0gXCIuZm9ybV9fYnV0dG9uLXN1Ym1pdFwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGVkaXRQcm9maWxlRm9ybVNlbGVjdG9yID0gXCIuZm9ybV90eXBlX2VkaXQtcHJvZmlsZVwiO1xyXG5leHBvcnQgY29uc3QgZWRpdFByb2ZpbGVQb3B1cFNlbGVjdG9yID0gXCIjcG9wdXAtZWRpdC1wcm9maWxlXCI7XHJcblxyXG5leHBvcnQgY29uc3QgZWRpdEF2YXRhclBvcHVwU2VsZWN0b3IgPSBcIiNwb3B1cC1lZGl0LWF2YXRhclwiO1xyXG5leHBvcnQgY29uc3QgZWRpdEF2YXRhckZvcm1TZWxlY3RvciA9IFwiLmZvcm1fdHlwZV9lZGl0LWF2YXRhclwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFkZEltYWdlUG9wdXBTZWxlY3RvciA9IFwiI3BvcHVwLWFkZC1pbWFnZVwiO1xyXG5leHBvcnQgY29uc3QgYWRkSW1hZ2VGb3JtU2VsZWN0b3IgPSBcIi5mb3JtX3R5cGVfYWRkLWltYWdlXCI7XHJcblxyXG5leHBvcnQgY29uc3Qgdmlld2VyUG9wdXBTZWxlY3RvciA9IFwiI3BvcHVwLWltYWdlLXZpZXdcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBwcm9maWxlTmFtZVNlbGVjdG9yID0gXCIucHJvZmlsZV9fbmFtZVwiO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUFib3V0U2VsZWN0b3IgPSBcIi5wcm9maWxlX19kZXNjcmlwdGlvblwiO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUF2YXRhclNlbGVjdG9yID0gXCIucHJvZmlsZV9fYXZhdGFyXCI7XHJcblxyXG5leHBvcnQgY29uc3QgcG9wdXBDbG9zZUJ0blNlbGVjdG9yID0gXCIucG9wdXBfX2J1dHRvbi1jbG9zZVwiO1xyXG5leHBvcnQgY29uc3QgcG9wdXBPdmVybGF5U2VsZWN0b3IgPSBcIi5wb3B1cF9fb3ZlcmxheVwiO1xyXG5leHBvcnQgY29uc3QgcG9wdXBDb25maXJtQnRuU2VsZWN0b3IgPSBcIi5wb3B1cF9fYnV0dG9uLWNvbmZpcm1cIjtcclxuZXhwb3J0IGNvbnN0IHBvcHVwVmlzaWJsZSA9IFwicG9wdXBfdmlzaWJsZVwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNhcmRMaXN0U2VsZWN0b3IgPSBcIi5jYXJkc1wiO1xyXG5leHBvcnQgY29uc3QgY2FyZFRlbXBsYXRlU2VsZWN0b3IgPSBcIiNjYXJkLXRlbXBsYXRlXCI7XHJcbmV4cG9ydCBjb25zdCBjYXJkU2VsZWN0b3IgPSBcIi5jYXJkXCI7XHJcbmV4cG9ydCBjb25zdCBjYXJkVGl0bGVTZWxlY3RvciA9IFwiLmNhcmRfX3RpdGxlXCI7XHJcbmV4cG9ydCBjb25zdCBjYXJkSW1hZ2VTZWxlY3RvciA9IFwiLmNhcmRfX2ltYWdlXCI7XHJcbmV4cG9ydCBjb25zdCBjYXJkTGlrZUJ0blNlbGVjdG9yID0gXCIuY2FyZF9fYnV0dG9uLWxpa2VcIjtcclxuZXhwb3J0IGNvbnN0IGNhcmRMaWtlQ291bnRlclNlbGVjdG9yID0gXCIuY2FyZF9fbGlrZS1jb3VudGVyXCI7XHJcbmV4cG9ydCBjb25zdCBjYXJkRGVsZXRlQnRuU2VsZWN0b3IgPSBcIi5jYXJkX19idXR0b24tZGVsZXRlXCI7XHJcbmV4cG9ydCBjb25zdCBjYXJkVmlld0J0blNlbGVjdG9yID0gXCIuY2FyZF9fYnV0dG9uLXZpZXctaW1hZ2VcIjtcclxuZXhwb3J0IGNvbnN0IGNhcmRCdG5MaWtlQWN0aXZlID0gXCJjYXJkX19idXR0b24tbGlrZV9hY3RpdmVcIjtcclxuZXhwb3J0IGNvbnN0IGNhcmRCdG5EZWxldGVIaWRkZW4gPSBcImNhcmRfX2J1dHRvbi1kZWxldGVfaGlkZGVuXCI7XHJcbmV4cG9ydCBjb25zdCBjb25maXJtYXRpb25Qb3B1cFNlbGVjdG9yID0gXCIjcG9wdXAtY29uZmlybWF0aW9uXCI7XHJcblxyXG5leHBvcnQgY29uc3QgZW5sYXJnZWRJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaW1hZ2UtcG9wdXBfX2ltYWdlXCIpO1xyXG5leHBvcnQgY29uc3QgZW5sYXJnZWRJbWFnZVRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5pbWFnZS1wb3B1cF9fdGl0bGVcIik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlXCIpO1xyXG5leHBvcnQgY29uc3QgZWRpdFByb2ZpbGVCdG4gPSBwcm9maWxlLnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYnV0dG9uLWVkaXRcIik7XHJcbmV4cG9ydCBjb25zdCBhZGRJbWFnZUJ0biA9IHByb2ZpbGUucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19idXR0b24tYWRkXCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUF2YXRhck92ZXJsYXkgPSBwcm9maWxlLnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIucHJvZmlsZV9fYXZhdGFyLW92ZXJsYXlcIlxyXG4pO1xyXG4iLCJpbXBvcnQge1xyXG4gIHBvcHVwQ2xvc2VCdG5TZWxlY3RvcixcclxuICBwb3B1cE92ZXJsYXlTZWxlY3RvcixcclxuICBwb3B1cFZpc2libGUsXHJcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX2lzT3BlbiA9IGZhbHNlO1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcblxyXG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSAoZXYpID0+IHtcclxuICAgICAgaWYgKGV2LmtleSA9PT0gXCJFc2NhcGVcIiAmJiB0aGlzLl9pc09wZW4pIHtcclxuICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBvcGVuKCkge1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG5cclxuICAgIHRoaXMuX2lzT3BlbiA9IHRydWU7XHJcbiAgICB0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5hZGQocG9wdXBWaXNpYmxlKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG5cclxuICAgIHRoaXMuX2lzT3BlbiA9IGZhbHNlO1xyXG4gICAgdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHBvcHVwVmlzaWJsZSk7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIGNvbnN0IGNsb3NlQnRuID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwQ2xvc2VCdG5TZWxlY3Rvcik7XHJcbiAgICBjbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCBwb3B1cE92ZXJsYXkgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBPdmVybGF5U2VsZWN0b3IpO1xyXG4gICAgcG9wdXBPdmVybGF5LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuaW1wb3J0IHsgZW5sYXJnZWRJbWFnZSwgZW5sYXJnZWRJbWFnZVRpdGxlIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBvcGVuKHsgbmFtZSwgbGluaywgYWx0ID0gXCJVbWEgaW1hZ2VtIGFtcGxpYWRhIGRhIHBhaXNhZ2VtLlwiIH0pIHtcclxuICAgIGVubGFyZ2VkSW1hZ2VUaXRsZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICBlbmxhcmdlZEltYWdlLnNyYyA9IGxpbms7XHJcbiAgICBlbmxhcmdlZEltYWdlLmFsdCA9IGFsdDtcclxuXHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5pbXBvcnQge1xyXG4gIGZvcm1GaWVsZFNlbGVjdG9yLFxyXG4gIGZvcm1TZWxlY3RvcixcclxuICBmb3JtU3VibWl0U2VsZWN0b3IsXHJcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHtcclxuICAgICAgaGFuZGxlRm9ybVN1Ym1pdCxcclxuICAgICAgc3VibWl0RGVmYXVsdFRleHQgPSBcIkVudmlhclwiLFxyXG4gICAgICBzdWJtaXRTZW5kVGV4dCA9IFwiRW52aWFuZG8uLi5cIixcclxuICAgICAgb25PcGVuID0gKCkgPT4ge30sXHJcbiAgICAgIG9uQ2xvc2UgPSAoKSA9PiB7fSxcclxuICAgIH0sXHJcbiAgICBwb3B1cFNlbGVjdG9yXHJcbiAgKSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgdGhpcy5fb25PcGVuID0gb25PcGVuO1xyXG4gICAgdGhpcy5fb25DbG9zZSA9IG9uQ2xvc2U7XHJcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKGZvcm1TZWxlY3Rvcik7XHJcblxyXG4gICAgdGhpcy5fc3VibWl0QnRuID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGZvcm1TdWJtaXRTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9zdWJtaXREZWZhdWx0VGV4dCA9IHN1Ym1pdERlZmF1bHRUZXh0O1xyXG4gICAgdGhpcy5fc3VibWl0U2VuZFRleHQgPSBzdWJtaXRTZW5kVGV4dDtcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2KSA9PiB7XHJcbiAgICAgIGNvbnN0IHZhbHVlcyA9IHRoaXMuX2dldElucHV0VmFsdWVzKCk7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ0bi50ZXh0Q29udGVudCA9IHRoaXMuX3N1Ym1pdFNlbmRUZXh0O1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KGV2LCB2YWx1ZXMpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBzZXRGb3JtVmFsdWVzKGRhdGEpIHtcclxuICAgIE9iamVjdC5lbnRyaWVzKGRhdGEpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xyXG4gICAgICBjb25zdCBmaWVsZCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihcclxuICAgICAgICBmb3JtRmllbGRTZWxlY3RvciArIGBbbmFtZT1cIiR7a2V5fVwiXWBcclxuICAgICAgKTtcclxuXHJcbiAgICAgIGZpZWxkLnZhbHVlID0gdmFsdWU7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9vbk9wZW4oKTtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ0bi50ZXh0Q29udGVudCA9IHRoaXMuX3N1Ym1pdERlZmF1bHRUZXh0O1xyXG4gICAgdGhpcy5fZm9ybS5yZXNldCgpO1xyXG4gICAgdGhpcy5fb25DbG9zZSgpO1xyXG4gIH1cclxuXHJcbiAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgY29uc3QgZm9ybVZhbHVlcyA9IHt9O1xyXG4gICAgY29uc3QgZm9ybUZpZWxkcyA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbChmb3JtRmllbGRTZWxlY3Rvcik7XHJcblxyXG4gICAgZm9ybUZpZWxkcy5mb3JFYWNoKChmaWVsZCkgPT4ge1xyXG4gICAgICBmb3JtVmFsdWVzW2ZpZWxkLm5hbWVdID0gZmllbGQudmFsdWU7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gZm9ybVZhbHVlcztcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xyXG4gIGNvbnN0cnVjdG9yKHsgbmFtZVNlbGVjdG9yLCBhYm91dFNlbGVjdG9yLCBhdmF0YXJTZWxlY3RvciB9KSB7XHJcbiAgICB0aGlzLl9uYW1lRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobmFtZVNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2Fib3V0RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYWJvdXRTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9hdmF0YXJFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhdmF0YXJTZWxlY3Rvcik7XHJcblxyXG4gICAgdGhpcy5fdXNlcklkID0gXCJcIjtcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmFtZTogdGhpcy5fbmFtZUVsZW1lbnQudGV4dENvbnRlbnQsXHJcbiAgICAgIGFib3V0OiB0aGlzLl9hYm91dEVsZW1lbnQudGV4dENvbnRlbnQsXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oeyBuYW1lLCBhYm91dCB9KSB7XHJcbiAgICB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICB0aGlzLl9hYm91dEVsZW1lbnQudGV4dENvbnRlbnQgPSBhYm91dDtcclxuICB9XHJcblxyXG4gIGdldFVzZXJJZCgpIHtcclxuICAgIHJldHVybiB0aGlzLl91c2VySWQ7XHJcbiAgfVxyXG5cclxuICBzZXRVc2VySWQoaWQpIHtcclxuICAgIHRoaXMuX3VzZXJJZCA9IGlkO1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckF2YXRhcih7IGF2YXRhciB9KSB7XHJcbiAgICBjb25zb2xlLmxvZyhhdmF0YXIpO1xyXG4gICAgdGhpcy5fYXZhdGFyRWxlbWVudC5zcmMgPSBhdmF0YXI7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgYXJvdW5kQXBpLFxyXG4gIGRlbGV0ZUNvbmZpcm1Qb3B1cCBhcyBjb25maXJtRGVsZXRpb25Qb3B1cCxcclxufSBmcm9tIFwiLi4vcGFnZXMvaW5kZXguanNcIjtcclxuaW1wb3J0IHtcclxuICBjYXJkQnRuRGVsZXRlSGlkZGVuLFxyXG4gIGNhcmRCdG5MaWtlQWN0aXZlLFxyXG4gIGNhcmREZWxldGVCdG5TZWxlY3RvcixcclxuICBjYXJkSWRTZWxlY3RvcixcclxuICBjYXJkSW1hZ2VTZWxlY3RvcixcclxuICBjYXJkTGlrZUJ0blNlbGVjdG9yLFxyXG4gIGNhcmRMaWtlQ291bnRlclNlbGVjdG9yLFxyXG4gIGNhcmRTZWxlY3RvcixcclxuICBjYXJkVGl0bGVTZWxlY3RvcixcclxuICBjYXJkVmlld0J0blNlbGVjdG9yLFxyXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuaW1wb3J0IHsgYWxlcnRFcnJvciB9IGZyb20gXCIuLi91dGlscy91dGlscy5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoeyBkYXRhLCBoYW5kbGVDYXJkQ2xpY2ssIHVzZXJJZCB9LCB0ZW1wbGF0ZVNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9pZCA9IGRhdGEuX2lkO1xyXG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcclxuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XHJcbiAgICB0aGlzLl9hbHQgPSBkYXRhLmFsdDtcclxuICAgIHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IgPSB0ZW1wbGF0ZVNlbGVjdG9yO1xyXG5cclxuICAgIHRoaXMuX3VzZXJMaWtlZCA9IGRhdGEubGlrZXMuc29tZSgoZWxlbSkgPT4gZWxlbS5faWQgPT0gdXNlcklkKTtcclxuICAgIHRoaXMuX2xpa2VDb3VudCA9IGRhdGEubGlrZXMubGVuZ3RoO1xyXG5cclxuICAgIHRoaXMuX2lzT3duZXIgPSBkYXRhLm93bmVyLl9pZCA9PSB1c2VySWQ7XHJcblxyXG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xyXG4gIH1cclxuXHJcbiAgZ2VuZXJhdGVDYXJkKCkge1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIGlmICghdGhpcy5faXNPd25lcikge1xyXG4gICAgICB0aGlzLl9lbGVtZW50XHJcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoY2FyZERlbGV0ZUJ0blNlbGVjdG9yKVxyXG4gICAgICAgIC5jbGFzc0xpc3QuYWRkKGNhcmRCdG5EZWxldGVIaWRkZW4pO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihjYXJkVGl0bGVTZWxlY3RvcikudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xyXG5cclxuICAgIGNvbnN0IGNhcmRJbWFnZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihjYXJkSW1hZ2VTZWxlY3Rvcik7XHJcbiAgICBjYXJkSW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcclxuICAgIGNhcmRJbWFnZS5hbHQgPSB0aGlzLl9hbHQgPz8gYFVtYSBpbWFnZW0gZGEgcGFpc2FnZW0gZG8gJHt0aGlzLl9uYW1lfWA7XHJcblxyXG4gICAgdGhpcy5fbGlrZUJ0bkVsZW1lbnQgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoY2FyZExpa2VCdG5TZWxlY3Rvcik7XHJcblxyXG4gICAgaWYgKHRoaXMuX3VzZXJMaWtlZCkge1xyXG4gICAgICB0aGlzLl9saWtlQnRuRWxlbWVudC5jbGFzc0xpc3QuYWRkKGNhcmRCdG5MaWtlQWN0aXZlKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl9yZW5kZXJMaWtlcygpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fZWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihjYXJkTGlrZUJ0blNlbGVjdG9yKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl90b2dnbGVMaWtlQnV0dG9uKCk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgIGlmICh0aGlzLl9pc093bmVyKSB7XHJcbiAgICAgIHRoaXMuX2VsZW1lbnRcclxuICAgICAgICAucXVlcnlTZWxlY3RvcihjYXJkRGVsZXRlQnRuU2VsZWN0b3IpXHJcbiAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICBjb25maXJtRGVsZXRpb25Qb3B1cC5zZXRDb25maXJtQWN0aW9uKCgpID0+IHtcclxuICAgICAgICAgICAgYXJvdW5kQXBpLmRlbGV0ZUNhcmQodGhpcy5faWQpLmNhdGNoKGFsZXJ0RXJyb3IpO1xyXG4gICAgICAgICAgICB0aGlzLl9kZWxldGVDYXJkKCk7XHJcbiAgICAgICAgICAgIGNvbmZpcm1EZWxldGlvblBvcHVwLmNsb3NlKCk7XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICBjb25maXJtRGVsZXRpb25Qb3B1cC5vcGVuKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fZWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihjYXJkVmlld0J0blNlbGVjdG9yKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2soe1xyXG4gICAgICAgICAgbmFtZTogdGhpcy5fbmFtZSxcclxuICAgICAgICAgIGxpbms6IHRoaXMuX2xpbmssXHJcbiAgICAgICAgICBhbHQ6IHRoaXMuX2FsdCxcclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG5cclxuICBfZ2V0VGVtcGxhdGUoKSB7XHJcbiAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fdGVtcGxhdGVTZWxlY3RvcilcclxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihjYXJkU2VsZWN0b3IpXHJcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcblxyXG4gICAgcmV0dXJuIGVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICBfZGVsZXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XHJcbiAgfVxyXG5cclxuICBfdG9nZ2xlTGlrZUJ1dHRvbigpIHtcclxuICAgIHRoaXMuX3VzZXJMaWtlZCA9ICF0aGlzLl91c2VyTGlrZWQ7XHJcblxyXG4gICAgY29uc3QgbGlrZVByb21pc2UgPSB0aGlzLl91c2VyTGlrZWQgPyB0aGlzLl9saWtlKCkgOiB0aGlzLl9kaXNsaWtlKCk7XHJcbiAgICBsaWtlUHJvbWlzZVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fbGlrZUNvdW50ID0gcmVzLmxpa2VzLmxlbmd0aDtcclxuICAgICAgICB0aGlzLl9yZW5kZXJMaWtlcygpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goYWxlcnRFcnJvcik7XHJcbiAgfVxyXG5cclxuICBfbGlrZSgpIHtcclxuICAgIHRoaXMuX2xpa2VCdG5FbGVtZW50LmNsYXNzTGlzdC5hZGQoY2FyZEJ0bkxpa2VBY3RpdmUpO1xyXG4gICAgcmV0dXJuIGFyb3VuZEFwaS5saWtlQ2FyZCh0aGlzLl9pZCk7XHJcbiAgfVxyXG5cclxuICBfZGlzbGlrZSgpIHtcclxuICAgIHRoaXMuX2xpa2VCdG5FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoY2FyZEJ0bkxpa2VBY3RpdmUpO1xyXG4gICAgcmV0dXJuIGFyb3VuZEFwaS5kaXNsaWtlQ2FyZCh0aGlzLl9pZCk7XHJcbiAgfVxyXG5cclxuICBfcmVuZGVyTGlrZXMoKSB7XHJcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoY2FyZExpa2VDb3VudGVyU2VsZWN0b3IpLnRleHRDb250ZW50ID1cclxuICAgICAgdGhpcy5fbGlrZUNvdW50O1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkXCI7XHJcbmltcG9ydCB7IGNhcmRTZWN0aW9uLCBpbWFnZVZpZXdQb3B1cCwgdXNlckluZm8gfSBmcm9tIFwiLi4vcGFnZXNcIjtcclxuaW1wb3J0IHsgY2FyZFRlbXBsYXRlU2VsZWN0b3IgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBhZGRDYXJkVG9QYWdlKGRhdGEsIHRvU3RhcnQgPSBmYWxzZSkge1xyXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcclxuICAgIHtcclxuICAgICAgZGF0YSxcclxuICAgICAgaGFuZGxlQ2FyZENsaWNrOiAoaW1nRGF0YSkgPT4ge1xyXG4gICAgICAgIGltYWdlVmlld1BvcHVwLm9wZW4oaW1nRGF0YSk7XHJcbiAgICAgIH0sXHJcbiAgICAgIHVzZXJJZDogdXNlckluZm8uZ2V0VXNlcklkKCksXHJcbiAgICB9LFxyXG4gICAgY2FyZFRlbXBsYXRlU2VsZWN0b3JcclxuICApO1xyXG5cclxuICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmQuZ2VuZXJhdGVDYXJkKCk7XHJcbiAgY2FyZFNlY3Rpb24uYWRkSXRlbShjYXJkRWxlbWVudCwgdG9TdGFydCk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjaGVja1Jlc3BvbnNlKHJlcykge1xyXG4gIGlmIChyZXMub2spIHtcclxuICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYWxlcnRFcnJvcihlcnIpIHtcclxuICBhbGVydChgQWxnbyBkZXUgZXJyYWRvLiAke2Vycn0uYCk7XHJcbn1cclxuIiwiaW1wb3J0IHsgY2hlY2tSZXNwb25zZSB9IGZyb20gXCIuLi91dGlscy91dGlsc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIGhlYWRlcnMgfSkge1xyXG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XHJcbiAgICB0aGlzLl9oZWFkZXJzID0gaGVhZGVycztcclxuICB9XHJcblxyXG4gIGdldFVzZXJEYXRhKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyBcIi91c2Vycy9tZVwiLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKGNoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlVXNlckRhdGEoeyBuYW1lLCBhYm91dCB9KSB7XHJcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArIFwiL3VzZXJzL21lXCIsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lLFxyXG4gICAgICAgIGFib3V0LFxyXG4gICAgICB9KSxcclxuICAgIH0pLnRoZW4oY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVBdmF0YXIoeyBhdmF0YXIgfSkge1xyXG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyBcIi91c2Vycy9tZS9hdmF0YXJcIiwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGF2YXRhcixcclxuICAgICAgfSksXHJcbiAgICB9KS50aGVuKGNoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyBcIi9jYXJkc1wiLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKGNoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgYWRkQ2FyZCh7IG5hbWUsIGxpbmsgfSkge1xyXG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyBcIi9jYXJkc1wiLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lLFxyXG4gICAgICAgIGxpbmssXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbihjaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGRlbGV0ZUNhcmQoY2FyZElkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArIFwiL2NhcmRzL1wiICsgY2FyZElkLCB7XHJcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4oY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBsaWtlQ2FyZChjYXJkSWQpIHtcclxuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVXJsICsgXCIvY2FyZHMvbGlrZXMvXCIgKyBjYXJkSWQsIHtcclxuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbihjaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGRpc2xpa2VDYXJkKGNhcmRJZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyBcIi9jYXJkcy9saWtlcy9cIiArIGNhcmRJZCwge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKGNoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBwb3B1cENvbmZpcm1CdG5TZWxlY3RvciB9IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcclxuaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb25maXJtYXRpb25Qb3B1cCBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICB0aGlzLl9lbGVtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHBvcHVwQ29uZmlybUJ0blNlbGVjdG9yKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldikgPT4ge1xyXG4gICAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlQ29uZmlybSgpO1xyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG4gIHNldENvbmZpcm1BY3Rpb24oaGFuZGxlcikge1xyXG4gICAgdGhpcy5faGFuZGxlQ29uZmlybSA9IGhhbmRsZXI7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBcIi4uLy4uL3BhZ2VzL2luZGV4LmNzc1wiO1xyXG5cclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQge1xyXG4gIGNhcmRMaXN0U2VsZWN0b3IsXHJcbiAgZm9ybUNvbmZpZyxcclxuICBlZGl0UHJvZmlsZUZvcm1TZWxlY3RvcixcclxuICBhZGRJbWFnZUZvcm1TZWxlY3RvcixcclxuICBlZGl0UHJvZmlsZVBvcHVwU2VsZWN0b3IsXHJcbiAgYWRkSW1hZ2VQb3B1cFNlbGVjdG9yLFxyXG4gIHZpZXdlclBvcHVwU2VsZWN0b3IsXHJcbiAgZWRpdFByb2ZpbGVCdG4sXHJcbiAgYWRkSW1hZ2VCdG4sXHJcbiAgcHJvZmlsZU5hbWVTZWxlY3RvcixcclxuICBwcm9maWxlQWJvdXRTZWxlY3RvcixcclxuICBncm91cElkLFxyXG4gIHRva2VuLFxyXG4gIHByb2ZpbGVBdmF0YXJTZWxlY3RvcixcclxuICBjb25maXJtYXRpb25Qb3B1cFNlbGVjdG9yLFxyXG4gIHByb2ZpbGVBdmF0YXJPdmVybGF5LFxyXG4gIGVkaXRBdmF0YXJQb3B1cFNlbGVjdG9yLFxyXG4gIGVkaXRBdmF0YXJGb3JtU2VsZWN0b3IsXHJcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5pbXBvcnQgQXBpIGZyb20gXCIuLi9jb21wb25lbnRzL0FwaVwiO1xyXG5pbXBvcnQgeyBhZGRDYXJkVG9QYWdlLCBhbGVydEVycm9yIH0gZnJvbSBcIi4uL3V0aWxzL3V0aWxzXCI7XHJcbmltcG9ydCBDb25maXJtYXRpb25Qb3B1cCBmcm9tIFwiLi4vY29tcG9uZW50cy9Db25maXJtYXRpb25Qb3B1cFwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFyb3VuZEFwaSA9IG5ldyBBcGkoe1xyXG4gIGJhc2VVcmw6IGBodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxLyR7Z3JvdXBJZH1gLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgIGF1dGhvcml6YXRpb246IHRva2VuLFxyXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgfSxcclxufSk7XHJcblxyXG5leHBvcnQgY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oe1xyXG4gIG5hbWVTZWxlY3RvcjogcHJvZmlsZU5hbWVTZWxlY3RvcixcclxuICBhYm91dFNlbGVjdG9yOiBwcm9maWxlQWJvdXRTZWxlY3RvcixcclxuICBhdmF0YXJTZWxlY3RvcjogcHJvZmlsZUF2YXRhclNlbGVjdG9yLFxyXG59KTtcclxuXHJcbmV4cG9ydCBjb25zdCBjYXJkU2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxyXG4gIHsgaXRlbXM6IFtdLCByZW5kZXJlcjogKCkgPT4ge30gfSxcclxuICBjYXJkTGlzdFNlbGVjdG9yXHJcbik7XHJcblxyXG5hcm91bmRBcGlcclxuICAuZ2V0VXNlckRhdGEoKVxyXG4gIC50aGVuKChyZXN1bHQpID0+IHtcclxuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHJlc3VsdCk7XHJcbiAgICB1c2VySW5mby5zZXRVc2VyQXZhdGFyKHJlc3VsdCk7XHJcbiAgICB1c2VySW5mby5zZXRVc2VySWQocmVzdWx0Ll9pZCk7XHJcbiAgfSlcclxuICAuY2F0Y2goYWxlcnRFcnJvcik7XHJcblxyXG5hcm91bmRBcGlcclxuICAuZ2V0SW5pdGlhbENhcmRzKClcclxuICAudGhlbigocmVzdWx0KSA9PiB7XHJcbiAgICByZXN1bHQuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICBhZGRDYXJkVG9QYWdlKGl0ZW0pO1xyXG4gICAgfSk7XHJcbiAgfSlcclxuICAuY2F0Y2goYWxlcnRFcnJvcikudmFsdWU7XHJcblxyXG5jb25zdCBlZGl0UHJvZmlsZVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAge1xyXG4gICAgaGFuZGxlRm9ybVN1Ym1pdDogKGV2LCB2YWx1ZXMpID0+IHtcclxuICAgICAgZXYucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgYXJvdW5kQXBpXHJcbiAgICAgICAgLnVwZGF0ZVVzZXJEYXRhKHsgbmFtZTogdmFsdWVzLm5hbWUsIGFib3V0OiB2YWx1ZXMuYWJvdXQgfSlcclxuICAgICAgICAudGhlbigocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICB1c2VySW5mby5zZXRVc2VySW5mbyhyZXN1bHQpO1xyXG4gICAgICAgICAgZWRpdFByb2ZpbGVQb3B1cC5jbG9zZSgpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKGFsZXJ0RXJyb3IpO1xyXG4gICAgfSxcclxuICAgIHN1Ym1pdERlZmF1bHRUZXh0OiBcIlNhbHZhclwiLFxyXG4gICAgc3VibWl0U2VuZFRleHQ6IFwiU2FsdmFuZG8uLi5cIixcclxuICAgIG9uT3BlbjogKCkgPT4gZWRpdFByb2ZpbGVQb3B1cC5zZXRGb3JtVmFsdWVzKHVzZXJJbmZvLmdldFVzZXJJbmZvKCkpLFxyXG4gICAgb25DbG9zZTogKCkgPT4gcHJvZmlsZVZhbGlkYXRvci5jbGVhcldhcm5pbmdzKCksXHJcbiAgfSxcclxuICBlZGl0UHJvZmlsZVBvcHVwU2VsZWN0b3JcclxuKTtcclxuXHJcbmNvbnN0IGFkZEltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICB7XHJcbiAgICBoYW5kbGVGb3JtU3VibWl0OiAoZXYsIHZhbHVlcykgPT4ge1xyXG4gICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBhcm91bmRBcGlcclxuICAgICAgICAuYWRkQ2FyZCh7IG5hbWU6IHZhbHVlcy50aXRsZSwgbGluazogdmFsdWVzLmxpbmsgfSlcclxuICAgICAgICAudGhlbigocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICBhZGRDYXJkVG9QYWdlKHJlc3VsdCwgdHJ1ZSk7XHJcbiAgICAgICAgICBhZGRJbWFnZVBvcHVwLmNsb3NlKCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goYWxlcnRFcnJvcik7XHJcbiAgICB9LFxyXG4gICAgc3VibWl0RGVmYXVsdFRleHQ6IFwiQ3JpYXJcIixcclxuICAgIHN1Ym1pdFNlbmRUZXh0OiBcIkNyaWFuZG8uLi5cIixcclxuICAgIG9uQ2xvc2U6ICgpID0+IGFkZEltYWdlVmFsaWRhdG9yLmNsZWFyV2FybmluZ3MoKSxcclxuICB9LFxyXG4gIGFkZEltYWdlUG9wdXBTZWxlY3RvclxyXG4pO1xyXG5cclxuY29uc3QgZWRpdEF2YXRhclBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAge1xyXG4gICAgaGFuZGxlRm9ybVN1Ym1pdDogKGV2LCB2YWx1ZXMpID0+IHtcclxuICAgICAgZXYucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgYXJvdW5kQXBpXHJcbiAgICAgICAgLnVwZGF0ZUF2YXRhcih7IGF2YXRhcjogdmFsdWVzLmxpbmsgfSlcclxuICAgICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gICAgICAgICAgdXNlckluZm8uc2V0VXNlckF2YXRhcih7IGF2YXRhcjogdmFsdWVzLmxpbmsgfSk7XHJcbiAgICAgICAgICBlZGl0QXZhdGFyUG9wdXAuY2xvc2UoKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICBlZGl0QXZhdGFyUG9wdXAuY2xvc2UoKTtcclxuICAgICAgICAgIGFsZXJ0RXJyb3IoZXJyKTtcclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBzdWJtaXREZWZhdWx0VGV4dDogXCJTYWx2YXJcIixcclxuICAgIHN1Ym1pdFNlbmRUZXh0OiBcIlNhbHZhbmRvLi4uXCIsXHJcbiAgICBvbkNsb3NlOiAoKSA9PiBlZGl0QXZhdGFyVmFsaWRhdG9yLmNsZWFyV2FybmluZ3MoKSxcclxuICB9LFxyXG4gIGVkaXRBdmF0YXJQb3B1cFNlbGVjdG9yXHJcbik7XHJcblxyXG5leHBvcnQgY29uc3QgaW1hZ2VWaWV3UG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2Uodmlld2VyUG9wdXBTZWxlY3Rvcik7XHJcbmNvbnN0IHByb2ZpbGVWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtQ29uZmlnLCBlZGl0UHJvZmlsZUZvcm1TZWxlY3Rvcik7XHJcbmNvbnN0IGFkZEltYWdlVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybUNvbmZpZywgYWRkSW1hZ2VGb3JtU2VsZWN0b3IpO1xyXG5jb25zdCBlZGl0QXZhdGFyVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoXHJcbiAgZm9ybUNvbmZpZyxcclxuICBlZGl0QXZhdGFyRm9ybVNlbGVjdG9yXHJcbik7XHJcblxyXG5leHBvcnQgY29uc3QgZGVsZXRlQ29uZmlybVBvcHVwID0gbmV3IENvbmZpcm1hdGlvblBvcHVwKFxyXG4gIGNvbmZpcm1hdGlvblBvcHVwU2VsZWN0b3JcclxuKTtcclxuXHJcbmFkZEltYWdlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBhZGRJbWFnZVBvcHVwLm9wZW4oKSk7XHJcbmVkaXRQcm9maWxlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBlZGl0UHJvZmlsZVBvcHVwLm9wZW4oKSk7XHJcbnByb2ZpbGVBdmF0YXJPdmVybGF5LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBlZGl0QXZhdGFyUG9wdXAub3BlbigpKTtcclxuXHJcbmFkZEltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuZWRpdFByb2ZpbGVQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5lZGl0QXZhdGFyUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuaW1hZ2VWaWV3UG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuZGVsZXRlQ29uZmlybVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbnByb2ZpbGVWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5hZGRJbWFnZVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmVkaXRBdmF0YXJWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG4iXSwibmFtZXMiOlsiX193ZWJwYWNrX3JlcXVpcmVfXyIsImV4cG9ydHMiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJGb3JtVmFsaWRhdG9yIiwiY29uZmlnIiwiZm9ybVNlbGVjdG9yIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9mb3JtIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwidmFsdWUiLCJhZGRFdmVudExpc3RlbmVyIiwiZXYiLCJwcmV2ZW50RGVmYXVsdCIsIl9zZXRFdmVudExpc3RlbmVycyIsIl90aGlzIiwiaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImJ1dHRvbkVsZW1lbnQiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJmb3JFYWNoIiwiaW5wdXQiLCJfaGlkZUlucHV0RXJyb3IiLCJfdGhpczIiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3NldEN1c3RvbUVycm9yTWVzc2FnZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiLCJzb21lIiwiaW5wdXRFbGVtZW50IiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwiY29uY2F0IiwiaWQiLCJ0ZXh0Q29udGVudCIsInZhbGlkaXR5U3RhdGUiLCJ2YWx1ZU1pc3NpbmciLCJzZXRDdXN0b21WYWxpZGl0eSIsInRvb1Nob3J0IiwidHlwZU1pc21hdGNoIiwiU2VjdGlvbiIsIl9yZWYiLCJjb250YWluZXJTZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiY2xlYXIiLCJpdGVtIiwidG9TdGFydCIsInByZXBlbmQiLCJhcHBlbmQiLCJpbm5lckhUTUwiLCJmb3JtQ29uZmlnIiwiZm9ybUZpZWxkU2VsZWN0b3IiLCJwb3B1cFZpc2libGUiLCJjYXJkTGlrZUJ0blNlbGVjdG9yIiwiY2FyZERlbGV0ZUJ0blNlbGVjdG9yIiwiY2FyZEJ0bkxpa2VBY3RpdmUiLCJlbmxhcmdlZEltYWdlIiwiZW5sYXJnZWRJbWFnZVRpdGxlIiwicHJvZmlsZSIsImVkaXRQcm9maWxlQnRuIiwiYWRkSW1hZ2VCdG4iLCJwcm9maWxlQXZhdGFyT3ZlcmxheSIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9pc09wZW4iLCJfZWxlbWVudCIsIl9oYW5kbGVFc2NDbG9zZSIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIlBvcHVwV2l0aEltYWdlIiwiX1BvcHVwIiwiX2luaGVyaXRzIiwiX3N1cGVyIiwibmFtZSIsImxpbmsiLCJfcmVmJGFsdCIsImFsdCIsInNyYyIsIl9nZXQiLCJfZ2V0UHJvdG90eXBlT2YiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsIl9yZWYkc3VibWl0RGVmYXVsdFRleCIsInN1Ym1pdERlZmF1bHRUZXh0IiwiX3JlZiRzdWJtaXRTZW5kVGV4dCIsInN1Ym1pdFNlbmRUZXh0IiwiX3JlZiRvbk9wZW4iLCJvbk9wZW4iLCJfcmVmJG9uQ2xvc2UiLCJvbkNsb3NlIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfb25PcGVuIiwiX29uQ2xvc2UiLCJfc3VibWl0QnRuIiwiX3N1Ym1pdERlZmF1bHRUZXh0IiwiX3N1Ym1pdFNlbmRUZXh0IiwidmFsdWVzIiwiX2dldElucHV0VmFsdWVzIiwiZGF0YSIsIl90aGlzMyIsImVudHJpZXMiLCJfcmVmMiIsIl9yZWYzIiwicmVzZXQiLCJmb3JtVmFsdWVzIiwiZmllbGQiLCJVc2VySW5mbyIsIm5hbWVTZWxlY3RvciIsImFib3V0U2VsZWN0b3IiLCJhdmF0YXJTZWxlY3RvciIsIl9uYW1lRWxlbWVudCIsIl9hYm91dEVsZW1lbnQiLCJfYXZhdGFyRWxlbWVudCIsIl91c2VySWQiLCJhYm91dCIsImF2YXRhciIsImNvbnNvbGUiLCJsb2ciLCJDYXJkIiwidGVtcGxhdGVTZWxlY3RvciIsImhhbmRsZUNhcmRDbGljayIsInVzZXJJZCIsIl9pZCIsIl9uYW1lIiwiX2xpbmsiLCJfYWx0IiwiX3RlbXBsYXRlU2VsZWN0b3IiLCJfdXNlckxpa2VkIiwibGlrZXMiLCJlbGVtIiwiX2xpa2VDb3VudCIsImxlbmd0aCIsIl9pc093bmVyIiwib3duZXIiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX3RoaXMkX2FsdCIsIl9nZXRUZW1wbGF0ZSIsImNhcmRJbWFnZSIsIl9saWtlQnRuRWxlbWVudCIsIl9yZW5kZXJMaWtlcyIsIl90b2dnbGVMaWtlQnV0dG9uIiwiY29uZmlybURlbGV0aW9uUG9wdXAiLCJhcm91bmRBcGkiLCJkZWxldGVDYXJkIiwiY2F0Y2giLCJhbGVydEVycm9yIiwiX2RlbGV0ZUNhcmQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX2xpa2UiLCJfZGlzbGlrZSIsInRoZW4iLCJyZXMiLCJsaWtlQ2FyZCIsImRpc2xpa2VDYXJkIiwiYWRkQ2FyZFRvUGFnZSIsImFyZ3VtZW50cyIsInVuZGVmaW5lZCIsImNhcmRFbGVtZW50IiwiaW1nRGF0YSIsImltYWdlVmlld1BvcHVwIiwib3BlbiIsInVzZXJJbmZvIiwiZ2V0VXNlcklkIiwiZ2VuZXJhdGVDYXJkIiwiY2FyZFNlY3Rpb24iLCJhZGRJdGVtIiwiY2hlY2tSZXNwb25zZSIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJlcnIiLCJhbGVydCIsIkFwaSIsImJhc2VVcmwiLCJoZWFkZXJzIiwiX2Jhc2VVcmwiLCJfaGVhZGVycyIsImZldGNoIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJfcmVmNCIsImNhcmRJZCIsIkNvbmZpcm1hdGlvblBvcHVwIiwiX2hhbmRsZUNvbmZpcm0iLCJoYW5kbGVyIiwiYXV0aG9yaXphdGlvbiIsImdldFVzZXJEYXRhIiwicmVzdWx0Iiwic2V0VXNlckluZm8iLCJzZXRVc2VyQXZhdGFyIiwic2V0VXNlcklkIiwiZ2V0SW5pdGlhbENhcmRzIiwiZWRpdFByb2ZpbGVQb3B1cCIsInVwZGF0ZVVzZXJEYXRhIiwic2V0Rm9ybVZhbHVlcyIsImdldFVzZXJJbmZvIiwicHJvZmlsZVZhbGlkYXRvciIsImNsZWFyV2FybmluZ3MiLCJhZGRJbWFnZVBvcHVwIiwiYWRkQ2FyZCIsInRpdGxlIiwiYWRkSW1hZ2VWYWxpZGF0b3IiLCJlZGl0QXZhdGFyUG9wdXAiLCJ1cGRhdGVBdmF0YXIiLCJlZGl0QXZhdGFyVmFsaWRhdG9yIiwiZGVsZXRlQ29uZmlybVBvcHVwIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJlbmFibGVWYWxpZGF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==